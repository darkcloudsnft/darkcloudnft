{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arazx\\\\Desktop\\\\benfisher\\\\src\\\\Components\\\\mintbtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport abi from \"./abi.json\";\nimport Web3 from \"web3\";\nimport oslogo from './images/oslogo.png';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst {\n  REACT_APP_CONTRACT_ADDRESS\n} = process.env;\nconst SELECTEDNETWORK = \"1\";\nconst SELECTEDNETWORKNAME = \"Ethereum Maintnet\";\nconst nftquantity = 2000;\n\nfunction Mintbtn() {\n  _s();\n\n  const [errormsg, setErrorMsg] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const [totalSupply, settotalSupply] = useState(0);\n  const [walletConnected, setWalletConnected] = useState(0);\n  useEffect(async () => {\n    if (await detectEthereumProvider()) {\n      // setProvider(true);\n      window.web3 = new Web3(window.ethereum);\n      const web3 = window.web3;\n\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\n        const ct = new web3.eth.Contract(abi, contractaddress);\n        settotalSupply(await ct.methods.totalSupply().call());\n\n        if (nftquantity - (await ct.methods.totalSupply().call()) == 0) {\n          setErrorMsg(\"All NFTs minted, Sale has ended\");\n        }\n      } else {\n        // setProvider(false);\n        setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\");\n      }\n    } else {\n      setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\"); // setProvider(false);\n    }\n\n    if (window.ethereum) {\n      handleEthereum();\n    } else {\n      window.addEventListener('ethereum#initialized', handleEthereum, {\n        once: true\n      });\n      setTimeout(handleEthereum, 10000);\n    }\n\n    function handleEthereum() {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum && ethereum.isMetaMask) {\n        console.log('Ethereum successfully detected!'); // setProvider(true);\n      } else {\n        setErrorMsg('Please install MetaMask!'); // setProvider(false);\n      }\n    }\n  }, []);\n\n  async function loadWeb3() {\n    if (await detectEthereumProvider()) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      const web3 = window.web3; // Meta Mask Connected Account Address\n\n      let metaMaskAccount = await web3.eth.getAccounts();\n      metaMaskAccount = metaMaskAccount[0];\n\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n        // // creating contract instance\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\n        const ct = new web3.eth.Contract(abi, contractaddress);\n        let current = await ct.methods.totalSupply().call();\n\n        if (Number(current) === nftquantity) {\n          console.log(\"Sold out\");\n          return;\n        }\n\n        let price = await ct.methods.getPrice(quantity).call();\n        await ct.methods.mint(quantity).send({\n          from: metaMaskAccount,\n          value: price\n        });\n        settotalSupply(await ct.methods.totalSupply().call());\n        setQuantity(1);\n      } else {\n        setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\");\n      }\n\n      ;\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      // window.alert(\n      //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      // );\n      {\n        setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      }\n    }\n  }\n\n  async function connectWallet() {\n    if (await detectEthereumProvider()) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      const web3 = window.web3;\n\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n        // // creating contract instance\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\n        const ct = new web3.eth.Contract(abi, contractaddress);\n        let metaMaskAccount = await web3.eth.getAccounts();\n        metaMaskAccount = metaMaskAccount[0];\n\n        if ((await ct.methods.getStatus().call()) == 1) {\n          let isw = await ct.methods.isWhiteListSender().call({\n            from: metaMaskAccount\n          });\n          console.log(isw);\n\n          if (!isw) {\n            setWalletConnected(2);\n          } else if (isw) {\n            setWalletConnected(1);\n          }\n        } else {\n          setWalletConnected(1);\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !errormsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mintingsection py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-lg text-center\",\n          children: \"Use Metamask mobile app for better gas fees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), walletConnected == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            connectWallet();\n          },\n          className: \"mt-3 mint-btn mx-auto d-block\",\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 38\n        }, this) : \"\", walletConnected == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yellow\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                margin: \"auto\",\n                width: \"320px\"\n              },\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-white\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"minus back-button px-3 mx-1\",\n                  onClick: () => {\n                    if (quantity > 1) {\n                      setQuantity(quantity - 1);\n                    }\n                  },\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: 30,\n                    margin: \"0 15px\",\n                    color: '#fff'\n                  },\n                  children: quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"plus back-button px-3 mx-1\",\n                  onClick: () => {\n                    if (quantity < 5) {\n                      setQuantity(quantity + 1);\n                    }\n                  },\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mt-3 mint-btn mx-auto d-block\",\n            onClick: () => {\n              loadWeb3();\n            },\n            children: \"Mint a GoodFellape!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-2 supplytext\",\n            children: [nftquantity - totalSupply, \"/\", nftquantity, \" Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this) : \"\", walletConnected == 2 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center text-white teamname\",\n          children: \"You are not registered for whitelist, please wait for public sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 38\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://opensea.io/collection/goodfellapes-official/\",\n          className: \"text-center text-white viewonos d-block\",\n          target: \"_blank\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-inline\",\n            children: \"View on Opensea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            width: 30,\n            src: oslogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-2 supplytext\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: errormsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mintbtn, \"LYlhu8ImIa64E3Sm5ON4pkFsYrs=\");\n\n_c = Mintbtn;\nexport default Mintbtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mintbtn\");","map":{"version":3,"sources":["C:/Users/arazx/Desktop/benfisher/src/Components/mintbtn.js"],"names":["React","useState","useEffect","abi","Web3","oslogo","detectEthereumProvider","require","config","REACT_APP_CONTRACT_ADDRESS","process","env","SELECTEDNETWORK","SELECTEDNETWORKNAME","nftquantity","Mintbtn","errormsg","setErrorMsg","quantity","setQuantity","totalSupply","settotalSupply","walletConnected","setWalletConnected","window","web3","ethereum","eth","net","getId","contractaddress","ct","Contract","methods","call","handleEthereum","addEventListener","once","setTimeout","isMetaMask","console","log","loadWeb3","enable","metaMaskAccount","getAccounts","current","Number","price","getPrice","mint","send","from","value","currentProvider","connectWallet","getStatus","isw","isWhiteListSender","display","flexDirection","alignItems","margin","width","marginLeft","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport abi from \"./abi.json\";\r\nimport Web3 from \"web3\";\r\nimport oslogo from './images/oslogo.png'\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nrequire(\"dotenv\").config();\r\n \r\nconst { REACT_APP_CONTRACT_ADDRESS } = process.env; \r\nconst SELECTEDNETWORK = \"1\";\r\nconst SELECTEDNETWORKNAME = \"Ethereum Maintnet\";\r\nconst nftquantity = 2000;\r\n\r\nfunction Mintbtn() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [totalSupply, settotalSupply] = useState(0);\r\n  const [walletConnected,setWalletConnected] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      const web3 = window.web3;\r\n      if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n      \r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n\r\n        if (nftquantity-await ct.methods.totalSupply().call() == 0) {\r\n          setErrorMsg(\"All NFTs minted, Sale has ended\");\r\n        }\r\n      }\r\n      else {\r\n        // setProvider(false);\r\n        setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\");\r\n      }\r\n    }\r\n    else {\r\n      setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } \r\n    else {\r\n      window.addEventListener('ethereum#initialized', handleEthereum, {once: true,});\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\nfunction handleEthereum() {\r\n  const { ethereum } = window;\r\n  if (ethereum && ethereum.isMetaMask) {\r\n    console.log('Ethereum successfully detected!');\r\n    // setProvider(true);\r\n  } else {\r\n    setErrorMsg('Please install MetaMask!');\r\n    // setProvider(false);\r\n  }\r\n}\r\n\r\n\r\n  }, []);\r\n  \r\n  async function loadWeb3() {\r\n\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      const web3 = window.web3;\r\n      // Meta Mask Connected Account Address\r\n      let metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n        // // creating contract instance\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n        let current = await ct.methods.totalSupply().call();\r\n        if (Number(current) === nftquantity) {\r\n          console.log(\"Sold out\");\r\n          return;\r\n        }\r\n\r\n        let price = await ct.methods.getPrice(quantity).call();\r\n        await ct.methods.mint(quantity).send({ from: metaMaskAccount, value: price });\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n        setQuantity(1);\r\n      }else { setErrorMsg(\"Select \\\"\" + SELECTEDNETWORKNAME + \"\\\" network in your wallet to buy the nft\") };\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      // window.alert(\r\n      //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      // );\r\n      { setErrorMsg(\"Non-Ethereum browser detected. You should consider trying MetaMask!\") }\r\n    }\r\n  }\r\n\r\n  async function connectWallet(){\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      const web3 = window.web3;\r\n\r\n      if(await web3.eth.net.getId() == SELECTEDNETWORK){\r\n        // // creating contract instance\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n\r\n\r\n        let metaMaskAccount = await web3.eth.getAccounts();\r\n        metaMaskAccount = metaMaskAccount[0];\r\n\r\n        if(await ct.methods.getStatus().call() == 1 ){\r\n          let isw = await ct.methods.isWhiteListSender().call({ from: metaMaskAccount });\r\n          console.log(isw);\r\n  \r\n          if(!isw){\r\n            setWalletConnected(2);\r\n          }\r\n          else if(isw) {\r\n            setWalletConnected(1);\r\n          }\r\n        }\r\n        else{\r\n          setWalletConnected(1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !errormsg ? (\r\n        <div className=\"row mintingsection py-5\">\r\n          <div className=\"col-sm-12\">\r\n          <p className=\"text-white text-lg text-center\">Use Metamask mobile app for better gas fees</p>\r\n            {\r\n              walletConnected == 0 ? <button onClick={ () => { connectWallet(); }} className=\"mt-3 mint-btn mx-auto d-block\">Connect Wallet</button> : \"\"\r\n            }\r\n            {\r\n              walletConnected == 1 ? \r\n              <span>\r\n                <div className=\"yellow\">\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", margin: \"auto\", width: \"320px\"}} className=\"mt-2\">\r\n                    <h3 className=\"text-white\">Quantity</h3>\r\n                    <div style={{ marginLeft: \"10px\" }}>\r\n                      <button className=\"minus back-button px-3 mx-1\" \r\n                      onClick={() => {\r\n                          if (quantity > 1) {\r\n                            setQuantity(quantity - 1);\r\n                          }\r\n                        }}\r\n                      >-</button>\r\n                      <span style={{ fontSize: 30, margin: \"0 15px\", color: '#fff' }}>\r\n                        {quantity}\r\n                      </span>\r\n                      <button\r\n                        className=\"plus back-button px-3 mx-1\"\r\n                        onClick={() => {\r\n                          if (quantity < 5) {\r\n                            setQuantity(quantity + 1);\r\n                          }\r\n                        }}\r\n                      >+</button>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <button\r\n                className=\"mt-3 mint-btn mx-auto d-block\"\r\n                onClick={() => {\r\n                  loadWeb3();\r\n                }}\r\n              >Mint a GoodFellape!</button>\r\n              <h5 className=\"mt-2 supplytext\">{nftquantity-totalSupply}/{nftquantity} Available</h5></span> : \"\"\r\n            }\r\n            {\r\n              walletConnected == 2 ? <h3 className=\"text-center text-white teamname\">You are not registered for whitelist, please wait for public sale</h3> : \"\"\r\n            }\r\n            <a href=\"https://opensea.io/collection/goodfellapes-official/\" className=\"text-center text-white viewonos d-block\" target=\"_blank\">\r\n              <br /><p className=\"d-inline\">View on Opensea</p> <img width={30} src={oslogo}/>\r\n            </a>\r\n          </div>\r\n      </div> ) : <h5 className=\"mt-2 supplytext\"><b>{ errormsg }</b></h5> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mintbtn;"]},"metadata":{},"sourceType":"module"}